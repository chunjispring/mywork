来分享一个在Linux下执行脚本时遇到报错的解决办法。
本来在Linux下写了个安装jdk和tomcat的sh脚本，当时运行非常没有问题。过后，放在Windows下存放了一段时间，
现在又拿到Linux执行，运行时却报错“syntax error near unexpected token `in”。
难道过了一段时间变质了？不过确实是变质了。Windows下，我曾经打开过这个文档，造成文档成了dos下的格式。(开来这玩意跟食物一样不能随便打开)。操作上可以如下验证文档。
在保证语法正确的情况下：

　　1.新建一个a.sh文件。在其中写入几行脚本保存。
　　2.用命令vi -b a.sh你会看到的内容和用 vi a.sh看到的内容一样。
　　3.现在同样的比较下我原来的文档。发现每行脚本最后多了个^M。
那么接下来就要搞清楚这个^M是什么东东？
long long ago..... 老式的电传打字机使用两个字符来另起新行。一个字符把滑动架移回首位 (称为回车，，ASCII码为0D)，另一个字符把纸上移一行 (称为换行, ，ASCII码为0A)。当计算机问世以后，存储器曾经非常昂贵。有些人就认定没必要用两个字符来表示行尾。UNIX 开发者决定他们可以用 一个字符来表示行尾，Linux沿袭Unix，也是。Apple 开发者规定了用。开发 MS-DOS以及Windows 的那些家伙则决定沿用老式的。
因为MS-DOS及Windows是回车＋换行来表示换行，因此在Linux下用Vim查看在Windows下用VC写的代码，行尾后的“^M”符号，表示的是符。
在Vim中解决这个问题，很简单，在Vim中利用替换功能就可以将“^M”都干掉，键入如下替换命令行：
　　1)vi -b setup.sh
　　2)在命令编辑行<就是： 按ESC键 然后shift+:冒号>输入：%s/^M//g
注意：上述命令行中的“^M”符，不是“^”再加上“M”，而是由“Ctrl+v”、“Ctrl+M”键生成的。
这样替换掉以后，保存就可以执行了。当然还有其他的替换方式比如：
　　a.一些Linux版本有 dos2unix 程序，可以用来祛除^M。
　　b.cat filename1 | tr -d "\r" > newfile 去掉^M生成一个新文件，还有sed命令等，凡是可以替换的命令都是可以用来新生成一个文件的。
  
